// Code generated by MockGen. DO NOT EDIT.
// Source: accountmanagement_v1_identification.go

// Package api is a generated GoMock package.
package api

import (
	context "context"
	reflect "reflect"

	accountmanagement "github.com/authgear/authgear-server/pkg/lib/accountmanagement"
	gomock "github.com/golang/mock/gomock"
)

// MockAccountManagementV1IdentificationHandlerService is a mock of AccountManagementV1IdentificationHandlerService interface.
type MockAccountManagementV1IdentificationHandlerService struct {
	ctrl     *gomock.Controller
	recorder *MockAccountManagementV1IdentificationHandlerServiceMockRecorder
}

// MockAccountManagementV1IdentificationHandlerServiceMockRecorder is the mock recorder for MockAccountManagementV1IdentificationHandlerService.
type MockAccountManagementV1IdentificationHandlerServiceMockRecorder struct {
	mock *MockAccountManagementV1IdentificationHandlerService
}

// NewMockAccountManagementV1IdentificationHandlerService creates a new mock instance.
func NewMockAccountManagementV1IdentificationHandlerService(ctrl *gomock.Controller) *MockAccountManagementV1IdentificationHandlerService {
	mock := &MockAccountManagementV1IdentificationHandlerService{ctrl: ctrl}
	mock.recorder = &MockAccountManagementV1IdentificationHandlerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountManagementV1IdentificationHandlerService) EXPECT() *MockAccountManagementV1IdentificationHandlerServiceMockRecorder {
	return m.recorder
}

// StartAdding mocks base method.
func (m *MockAccountManagementV1IdentificationHandlerService) StartAdding(ctx context.Context, input *accountmanagement.StartAddingInput) (*accountmanagement.StartAddingOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StartAdding", ctx, input)
	ret0, _ := ret[0].(*accountmanagement.StartAddingOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StartAdding indicates an expected call of StartAdding.
func (mr *MockAccountManagementV1IdentificationHandlerServiceMockRecorder) StartAdding(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartAdding", reflect.TypeOf((*MockAccountManagementV1IdentificationHandlerService)(nil).StartAdding), ctx, input)
}
