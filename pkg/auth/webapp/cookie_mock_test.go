// Code generated by MockGen. DO NOT EDIT.
// Source: cookie.go

// Package webapp is a generated GoMock package.
package webapp

import (
	http "net/http"
	reflect "reflect"

	httputil "github.com/authgear/authgear-server/pkg/util/httputil"
	gomock "github.com/golang/mock/gomock"
)

// MockCookieManager is a mock of CookieManager interface.
type MockCookieManager struct {
	ctrl     *gomock.Controller
	recorder *MockCookieManagerMockRecorder
}

// MockCookieManagerMockRecorder is the mock recorder for MockCookieManager.
type MockCookieManagerMockRecorder struct {
	mock *MockCookieManager
}

// NewMockCookieManager creates a new mock instance.
func NewMockCookieManager(ctrl *gomock.Controller) *MockCookieManager {
	mock := &MockCookieManager{ctrl: ctrl}
	mock.recorder = &MockCookieManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCookieManager) EXPECT() *MockCookieManagerMockRecorder {
	return m.recorder
}

// ClearCookie mocks base method.
func (m *MockCookieManager) ClearCookie(def *httputil.CookieDef) *http.Cookie {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClearCookie", def)
	ret0, _ := ret[0].(*http.Cookie)
	return ret0
}

// ClearCookie indicates an expected call of ClearCookie.
func (mr *MockCookieManagerMockRecorder) ClearCookie(def interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClearCookie", reflect.TypeOf((*MockCookieManager)(nil).ClearCookie), def)
}

// GetCookie mocks base method.
func (m *MockCookieManager) GetCookie(r *http.Request, def *httputil.CookieDef) (*http.Cookie, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCookie", r, def)
	ret0, _ := ret[0].(*http.Cookie)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCookie indicates an expected call of GetCookie.
func (mr *MockCookieManagerMockRecorder) GetCookie(r, def interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCookie", reflect.TypeOf((*MockCookieManager)(nil).GetCookie), r, def)
}

// ValueCookie mocks base method.
func (m *MockCookieManager) ValueCookie(def *httputil.CookieDef, value string) *http.Cookie {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValueCookie", def, value)
	ret0, _ := ret[0].(*http.Cookie)
	return ret0
}

// ValueCookie indicates an expected call of ValueCookie.
func (mr *MockCookieManagerMockRecorder) ValueCookie(def, value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValueCookie", reflect.TypeOf((*MockCookieManager)(nil).ValueCookie), def, value)
}
