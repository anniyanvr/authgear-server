// Code generated by MockGen. DO NOT EDIT.
// Source: normalizer.go

// Package stdattrs is a generated GoMock package.
package stdattrs

import (
	reflect "reflect"

	internalinterface "github.com/authgear/authgear-server/pkg/api/internalinterface"
	model "github.com/authgear/authgear-server/pkg/api/model"
	gomock "github.com/golang/mock/gomock"
)

// MockLoginIDNormalizerFactory is a mock of LoginIDNormalizerFactory interface.
type MockLoginIDNormalizerFactory struct {
	ctrl     *gomock.Controller
	recorder *MockLoginIDNormalizerFactoryMockRecorder
}

// MockLoginIDNormalizerFactoryMockRecorder is the mock recorder for MockLoginIDNormalizerFactory.
type MockLoginIDNormalizerFactoryMockRecorder struct {
	mock *MockLoginIDNormalizerFactory
}

// NewMockLoginIDNormalizerFactory creates a new mock instance.
func NewMockLoginIDNormalizerFactory(ctrl *gomock.Controller) *MockLoginIDNormalizerFactory {
	mock := &MockLoginIDNormalizerFactory{ctrl: ctrl}
	mock.recorder = &MockLoginIDNormalizerFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoginIDNormalizerFactory) EXPECT() *MockLoginIDNormalizerFactoryMockRecorder {
	return m.recorder
}

// NormalizerWithLoginIDType mocks base method.
func (m *MockLoginIDNormalizerFactory) NormalizerWithLoginIDType(loginIDKeyType model.LoginIDKeyType) internalinterface.LoginIDNormalizer {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NormalizerWithLoginIDType", loginIDKeyType)
	ret0, _ := ret[0].(internalinterface.LoginIDNormalizer)
	return ret0
}

// NormalizerWithLoginIDType indicates an expected call of NormalizerWithLoginIDType.
func (mr *MockLoginIDNormalizerFactoryMockRecorder) NormalizerWithLoginIDType(loginIDKeyType interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NormalizerWithLoginIDType", reflect.TypeOf((*MockLoginIDNormalizerFactory)(nil).NormalizerWithLoginIDType), loginIDKeyType)
}
